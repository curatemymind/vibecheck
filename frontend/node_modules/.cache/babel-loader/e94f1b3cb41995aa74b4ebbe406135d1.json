{"ast":null,"code":"var _jsxFileName = \"/Users/lexiewebel/Desktop/vibecheck/frontend/src/pages/Playlist.js\";\nimport React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport './testing.css';\nconst genres = [];\nvar recommended = [];\nconst animatedComponents = makeAnimated();\nconst Vibes = [{\n  label: \"Funky\",\n  value: \"Funky\"\n}, {\n  label: \"Happy\",\n  value: \"Happy\"\n}, {\n  label: \"Sad\",\n  value: \"Sad\"\n}, {\n  label: \"Chill\",\n  value: \"Chill\"\n}, {\n  label: \"Flirty\",\n  value: \"Flirty\"\n}, {\n  label: \"Study\",\n  value: \"Study\"\n}, {\n  label: \"Workout\",\n  value: \"Workout\"\n}, {\n  label: \"Nostalgic\",\n  value: \"Nostalgic\"\n}];\n\nclass Playlist extends React.Component {\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n\n    this.handleVibe = newVibe => {\n      //handles updating the state for vibe\n      this.setState({\n        vibe: newVibe['label']\n      });\n    };\n\n    this.handleArtists = chosenArtists => {\n      //handles updating the state for vibe\n      if (chosenArtists != null) {\n        var tempArray = [];\n\n        for (var i = 0; i < chosenArtists.length; i++) {\n          tempArray.push([chosenArtists[i]['label'], chosenArtists[i]['parent']]);\n        } //tempArray = [...new Set(tempArray)];\n\n\n        this.setState({\n          chosenArtists: tempArray\n        });\n      } else {\n        this.setState({\n          chosenArtists: null\n        });\n      }\n    };\n\n    this.handleGenres = genreChange => {\n      var string = \"\";\n      var finalGenres = [];\n\n      if (genreChange != null) {\n        var tempArray = [];\n\n        for (var i = 0; i < genreChange.length; i++) {\n          tempArray.push(genreChange[i]['label']);\n        }\n\n        this.setState({\n          genresSelected: tempArray\n        });\n\n        if (this.state.change === true) {\n          this.setState({\n            change: false\n          });\n        } else {\n          this.setState({\n            change: true\n          });\n        }\n\n        if (genreChange.length >= 1) {\n          //ensures only three genres are sent over as seeds\n          if (genreChange.length <= this.state.arrLen) {\n            var temp = this.state.arrLen - 1;\n\n            for (var b = 0; b < 10; b++) {\n              recommended.pop();\n            } //alert(recommended.length)\n\n\n            this.setState({\n              arrLen: temp\n            });\n          } else {\n            var temp = this.state.arrLen + 1;\n            this.setState({\n              arrLen: temp\n            });\n          }\n\n          finalGenres.push(genreChange[genreChange.length - 1]['value']); //a custom axios post request to ensure data is sent over...\n          //in this case, data is sent in params attribute\n\n          const request = axios({\n            headers: {\n              'content-type': 'application/json'\n            },\n            method: 'post',\n            url: `http://localhost:5000/recommendations`,\n            params: {\n              finalGenres\n            }\n          }).then(response => {\n            var length = response.data.data.length; //alert(response.data.data.label)\n            //console.log(response)\n\n            var temp = recommended;\n\n            for (var i = 0; i < length; i++) {\n              //console.log(response.data.data.tracks[i].artists[0].name)\n              recommended.push({\n                label: response.data.data[i],\n                value: response.data.data[i],\n                parent: finalGenres[0]\n              });\n            }\n\n            console.log(recommended); //alert(recommended.length)\n          }).catch(error => {\n            alert(\"There was an error connecting to the api\");\n            console.error(error);\n          });\n        }\n      } else {\n        this.setState({\n          genresSelected: null\n        });\n      }\n    };\n\n    this.submit = function (e) {\n      //do a hidden form\n      var dataToSend = [this.state.vibe, this.state.genresSelected, this.state.chosenArtists, this.state.playlistName];\n      const request = axios({\n        headers: {\n          'content-type': 'application/json'\n        },\n        method: 'post',\n        url: `http://localhost:5000/newPlaylist`,\n        params: {\n          dataToSend\n        }\n      });\n      e.preventDefault(); //window.location.replace(\"http://localhost:3000/axios\")\n    };\n\n    this.state = {\n      data: null,\n      genresSelected: null,\n      recArtists: null,\n      vibe: \"Funky\",\n      chosenArtists: null,\n      change: false,\n      arrLen: 0,\n      playlistName: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  componentDidMount() {\n    //creates a k,v pair list for genres that will be fed into react-select\n    axios.get(`http://localhost:5000/allGenres`).then(response => {\n      for (var i = 0; i < response.data.data.genres.length; i++) {\n        genres.push({\n          label: response.data.data.genres[i],\n          value: response.data.data.genres[i]\n        });\n      }\n\n      this.setState({\n        genres: response.data.data.genres\n      });\n    }).catch(error => {\n      alert(\"There was an error connecting to the api\");\n      console.error(error);\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      playlistName: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: \"http://localhost:5000/newPlaylist\",\n      method: \"POST\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 23\n      }\n    }, \"Playlist Curation\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sign-in-htm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      class: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 19\n      }\n    }, \"PLAYLIST NAME\"), /*#__PURE__*/React.createElement(\"input\", {\n      requiredplaceholder: \"Playlist Name\",\n      type: \"text\",\n      value: this.state.playlistName,\n      onChange: this.handleChange,\n      class: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      class: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 19\n      }\n    }, \"PLAYLIST VIBE\"), /*#__PURE__*/React.createElement(Select, {\n      required: true,\n      options: Vibes,\n      onChange: this.handleVibe,\n      components: animatedComponents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 19\n      }\n    }, this.state.Vibes.map((item, key) => /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }, \"item\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      class: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 19\n      }\n    }, \"PLAYLIST GENRE(S)\"), /*#__PURE__*/React.createElement(Select, {\n      options: genres,\n      onChange: this.handleGenres,\n      components: animatedComponents,\n      isMulti: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      class: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 19\n      }\n    }, \"PLAYLIST ARTIST(S)\"), this.state.change === true && /*#__PURE__*/React.createElement(Select, {\n      options: recommended,\n      onChange: this.handleArtists,\n      components: animatedComponents,\n      isMulti: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 50\n      }\n    }), this.state.change === false && /*#__PURE__*/React.createElement(Select, {\n      options: recommended,\n      onChange: this.handleArtists,\n      components: animatedComponents,\n      isMulti: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 51\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"vibe\",\n      name: \"vibe\",\n      value: this.state.vibe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"genresSelected\",\n      name: \"genresSelected\",\n      value: this.state.genresSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"chosenArtists\",\n      name: \"chosenArtists\",\n      value: this.state.chosenArtists,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"playlistName\",\n      name: \"playlistName\",\n      value: this.state.playlistName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      class: \"button\",\n      value: \"Create Playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 19\n      }\n    })))))));\n  }\n\n}\n\nexport default Playlist;","map":{"version":3,"sources":["/Users/lexiewebel/Desktop/vibecheck/frontend/src/pages/Playlist.js"],"names":["React","Redirect","Select","makeAnimated","axios","genres","recommended","animatedComponents","Vibes","label","value","Playlist","Component","constructor","handleVibe","newVibe","setState","vibe","handleArtists","chosenArtists","tempArray","i","length","push","handleGenres","genreChange","string","finalGenres","genresSelected","state","change","arrLen","temp","b","pop","request","headers","method","url","params","then","response","data","parent","console","log","catch","error","alert","submit","e","dataToSend","playlistName","preventDefault","recArtists","handleChange","bind","componentDidMount","get","event","target","render","map","item","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport './testing.css';\n\nconst genres = []\nvar recommended = []\nconst animatedComponents = makeAnimated();\n\nconst Vibes = [\n{ label: \"Funky\", value: \"Funky\" },\n{ label: \"Happy\", value: \"Happy\" },\n{ label: \"Sad\", value: \"Sad\" },\n{ label: \"Chill\", value: \"Chill\" },\n{ label: \"Flirty\", value: \"Flirty\" },\n{ label: \"Study\", value: \"Study\" },\n{ label: \"Workout\", value: \"Workout\" },\n{ label: \"Nostalgic\", value: \"Nostalgic\" }\n];\n\nclass Playlist extends React.Component {\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n    this.state = {\n        data: null,\n        genresSelected: null,\n        recArtists: null,\n        vibe: \"Funky\",\n        chosenArtists: null,\n        change: false,\n        arrLen: 0,\n        playlistName: null,\n      };\n      this.handleChange = this.handleChange.bind(this);\n      this.submit = this.submit.bind(this);\n  }\n\n  componentDidMount() {\n\n    //creates a k,v pair list for genres that will be fed into react-select\n    axios.get(`http://localhost:5000/allGenres`)\n    .then((response) => {\n      for (var i = 0; i < response.data.data.genres.length; i++) {\n      genres.push({ label: response.data.data.genres[i], value: response.data.data.genres[i]})\n      }\n      \n      this.setState({\n        genres: response.data.data.genres\n      });\n\n    }).catch((error) => {\n      alert(\"There was an error connecting to the api\")\n      console.error(error);\n    });\n\n  }\n\n  handleVibe = newVibe => {\n    //handles updating the state for vibe\n    this.setState({vibe: newVibe['label']})\n  };\n\n  handleArtists = chosenArtists => {\n    //handles updating the state for vibe\n    if(chosenArtists != null)\n    {\n      var tempArray = []\n\n      for(var i = 0; i < chosenArtists.length; i++)\n      {\n        tempArray.push([chosenArtists[i]['label'], chosenArtists[i]['parent']])\n      }\n      //tempArray = [...new Set(tempArray)];\n      this.setState({chosenArtists: tempArray})\n    }\n    else{this.setState({chosenArtists: null})}\n  };\n\n  //creates a k,v pair list for artists from a certaini genre that will be fed into react-select\n  handleGenres = genreChange => {\n    var string = \"\"\n    var finalGenres = []\n\n\n    if (genreChange != null) {\n      \n      var tempArray = []\n\n      for(var i = 0; i < genreChange.length; i++)\n      {\n        tempArray.push(genreChange[i]['label'])\n      }\n      this.setState({genresSelected: tempArray})\n\n      if(this.state.change === true){this.setState({change: false})}\n      else{this.setState({change: true})}\n\n       \n      if (genreChange.length >= 1) {\n          //ensures only three genres are sent over as seeds\n          if(genreChange.length <= this.state.arrLen)\n          {\n            var temp = this.state.arrLen - 1\n            for(var b = 0; b < 10; b++)\n            {\n              recommended.pop()\n              \n            }\n            //alert(recommended.length)\n            this.setState({arrLen: temp})\n          }\n          else \n          {\n            var temp = this.state.arrLen + 1\n            this.setState({arrLen: temp})\n          }\n          \n          finalGenres.push(genreChange[genreChange.length - 1]['value'])\n          \n          //a custom axios post request to ensure data is sent over...\n          //in this case, data is sent in params attribute\n          const request = axios({\n            headers: {\n            'content-type': 'application/json'\n            },\n            method: 'post',\n            url: `http://localhost:5000/recommendations`,\n            params: {\n              finalGenres\n            }\n          })\n          .then((response) => {\n            var length = (response.data.data.length)\n            //alert(response.data.data.label)\n            //console.log(response)\n            \n            var temp = recommended\n\n\n            for (var i = 0; i < length; i++) {\n              //console.log(response.data.data.tracks[i].artists[0].name)\n\n              recommended.push({label: response.data.data[i], value: response.data.data[i], parent: finalGenres[0]})\n            }\n            console.log(recommended)\n\n            \n \n            //alert(recommended.length)\n          }).catch((error) => {\n            alert(\"There was an error connecting to the api\")\n            console.error(error);\n          });\n        \n      }\n    }\n    else{this.setState({genresSelected: null})}\n  };\n\n  handleChange(event) {\n    this.setState({playlistName: event.target.value});\n  }\n\n  submit = function (e) {\n    \n    //do a hidden form\n    var dataToSend = [this.state.vibe, this.state.genresSelected, this.state.chosenArtists, this.state.playlistName]\n    const request = axios({\n      headers: {\n      'content-type': 'application/json'\n      },\n      method: 'post',\n      url: `http://localhost:5000/newPlaylist`,\n      params: {\n        dataToSend\n      }\n    })\n    \n    e.preventDefault();\n    //window.location.replace(\"http://localhost:3000/axios\")\n  }\n\n  render() \n    {\n      return (\n        <div>\n          {/* <h1>this is used to validate states are updating properly</h1>\n          <h2>Vibe: {this.state.vibe}</h2>\n          <h2>Genres Selected [{this.state.arrLen}]: {this.state.genresSelected}</h2>\n\n          <h2>Artists: {this.state.chosenArtists}</h2>\n           */}\n          <form action='http://localhost:5000/newPlaylist' method='POST' >\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                <div>\n                  <h1><center>Playlist Curation</center></h1>\n                  <div class=\"login-form\">\n              <div class=\"sign-in-htm\">\n                <div class=\"group\">\n\n\n                  <label class=\"label\">PLAYLIST NAME</label>\n                  <input requiredplaceholder= \"Playlist Name\" type=\"text\" value={this.state.playlistName} onChange={this.handleChange} class=\"input\" />\n                  <br></br>\n                  <label class=\"label\">PLAYLIST VIBE</label>\n                  <Select required options={Vibes} onChange={this.handleVibe} components={animatedComponents}/>\n                  <select>\n                  {this.state.Vibes.map((item, key) =>\n                        <option>item</option>\n                  )}</select>\n                  <br></br>\n                  <label class=\"label\">PLAYLIST GENRE(S)</label>\n                  <Select  options={genres} onChange={this.handleGenres} components={animatedComponents} isMulti />\n                  <br></br>\n                  <label class=\"label\">PLAYLIST ARTIST(S)</label>\n                  {this.state.change === true && <Select options={recommended} onChange={this.handleArtists} components={animatedComponents} isMulti />}\n                  {this.state.change === false && <Select options={recommended} onChange={this.handleArtists} components={animatedComponents} isMulti />}\n                  <br></br>\n                </div>\n                </div>\n                </div>\n\n                  {/* <h2>Playlist Name</h2>\n                  <input type=\"text\" value={this.state.playlistName} onChange={this.handleChange}/> */}\n                  \n                  \n                   <input type=\"hidden\" id=\"vibe\" name=\"vibe\" value={this.state.vibe}></input>\n                   <input type=\"hidden\" id=\"genresSelected\" name=\"genresSelected\" value={this.state.genresSelected}></input>\n                   <input type=\"hidden\" id=\"chosenArtists\" name=\"chosenArtists\" value={this.state.chosenArtists}></input>\n                    <input type=\"hidden\" id=\"playlistName\" name=\"playlistName\" value={this.state.playlistName}></input>\n                    {/* <button type=\"button\" class=\"btn btn-primary btn-lg\">Create Playlist</button> */}\n\n                  <input type=\"submit\" class=\"button\" value=\"Create Playlist\" />\n                </div>\n                </div>\n\n              </div>\n            </div>\n          </form>\n        </div>\n      )\n    }\n}\nexport default Playlist;"]},"metadata":{},"sourceType":"module"}
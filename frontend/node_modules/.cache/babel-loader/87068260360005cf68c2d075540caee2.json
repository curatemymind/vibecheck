{"ast":null,"code":"var _jsxFileName = \"/Users/lexiewebel/Desktop/vibecheck/frontend/src/pages/Home.js\";\nimport React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\n\nclass Home extends React.Component {\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n    this.state = {\n      data: null,\n      genres: null,\n      recArtists: null\n    };\n  }\n\n  componentDidMount() {\n    const axios = require('axios');\n\n    axios.get(`http://localhost:5000/data`).then(response => {\n      this.setState({\n        data: JSON.stringify(response.data.data)\n      });\n    }).catch(error => {\n      alert(\"There was an error connecting to the api\");\n      console.error(error);\n    });\n    axios.get(`http://localhost:5000/allGenres`).then(response => {\n      this.setState({\n        genres: response.data.data.genres\n      });\n    }).catch(error => {\n      alert(\"There was an error connecting to the api\");\n      console.error(error);\n    });\n    axios.get(`http://localhost:5000/recommendations`).then(response => {\n      var length = response.data.data.tracks.length;\n      var tempArr = [];\n\n      for (var i = 0; i < length; i++) {\n        tempArr.push(response.data.data.tracks[i].artists[0].name);\n      }\n\n      this.setState({\n        recArtists: tempArr\n      });\n    }).catch(error => {\n      alert(\"There was an error connecting to the api\");\n      console.error(error);\n    });\n  }\n\n  render() {\n    if (this.state.genres != null) {\n      this.items = this.state.genres.map((item, key) => /*#__PURE__*/React.createElement(\"option\", {\n        name: item,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, item));\n    }\n\n    if (this.state.recArtists != null) {\n      this.artists = this.state.recArtists.map((item, key) => /*#__PURE__*/React.createElement(\"option\", {\n        name: item,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, item));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, this.state.recArtists, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, this.state.data), /*#__PURE__*/React.createElement(\"form\", {\n      action: \"http://localhost:5000/user\",\n      method: \"POST\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      required: true,\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"enter an email address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      required: true,\n      type: \"password\",\n      name: \"rawPassword\",\n      placeholder: \"enter a password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"genres\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"Choose three Genres:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"genres\",\n      id: \"genres\",\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, this.items), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"artists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, \"Choose three artists:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"artists\",\n      id: \"artists\",\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, this.artists), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"Sign Up\")));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/lexiewebel/Desktop/vibecheck/frontend/src/pages/Home.js"],"names":["React","Redirect","Home","Component","constructor","state","data","genres","recArtists","componentDidMount","axios","require","get","then","response","setState","JSON","stringify","catch","error","alert","console","length","tracks","tempArr","i","push","artists","name","render","items","map","item","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\n\nclass Home extends React.Component { \n\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n    this.state = {\n      data: null,\n      genres: null,\n      recArtists: null,\n    };\n  }\n\n componentDidMount() {\n  const axios = require('axios');\n  axios.get(`http://localhost:5000/data`)\n      .then((response) => {\n          this.setState({\n              data: (JSON.stringify(response.data.data))\n          });\n      }).catch((error) => {\n          alert(\"There was an error connecting to the api\")\n          console.error(error);\n      }); \n  \n  axios.get(`http://localhost:5000/allGenres`)\n  .then((response) => {\n      this.setState({\n          genres: response.data.data.genres\n      });\n  }).catch((error) => {\n      alert(\"There was an error connecting to the api\")\n      console.error(error);\n  });\n\n  axios.get(`http://localhost:5000/recommendations`)\n  .then((response) => {\n    var length = (response.data.data.tracks.length)\n    \n    var tempArr = []\n    for(var i = 0; i < length; i++)\n    {\n      tempArr.push(response.data.data.tracks[i].artists[0].name)\n    }\n      this.setState({\n          recArtists: tempArr\n      });\n  }).catch((error) => {\n      alert(\"There was an error connecting to the api\")\n      console.error(error);\n  });\n }\n\n  render()\n  {  \n    if(this.state.genres != null)\n    {\n      this.items = this.state.genres.map((item, key) =>\n        <option name={item} key={key}>{item}</option>\n      ); \n    }\n\n    if(this.state.recArtists != null)\n    {\n      this.artists = this.state.recArtists.map((item, key) =>\n        <option name={item} key={key}>{item}</option>\n      ); \n    }\n    \n    return (\n      <div>\n        {this.state.recArtists}\n        <h1>{this.state.data}</h1>\n        <form action = 'http://localhost:5000/user' method = 'POST'>\n            <br></br>\n            <input required type=\"email\" name=\"email\" placeholder=\"enter an email address\"></input>\n            <input required type=\"password\" name=\"rawPassword\" placeholder=\"enter a password\"></input>\n            \n            <br></br>\n            <label for=\"genres\">Choose three Genres:</label>\n            <br></br>\n              <select name=\"genres\" id=\"genres\" multiple>\n                {this.items}\n              </select>\n              <br></br>\n              <label for=\"artists\">Choose three artists:</label>\n              <br></br>\n              <select name=\"artists\" id=\"artists\" multiple>\n                {this.artists}\n              </select>\n              <br></br>\n\n          <button type=\"submit\">Sign Up</button>\n        </form>\n      </div>\n    )        \n  }\n}\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}
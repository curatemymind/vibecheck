{"ast":null,"code":"var _jsxFileName = \"/Users/lexiewebel/Desktop/vibecheck/frontend/src/pages/AxiosExample.js\";\nimport React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport './loginsignup.css';\nimport axios from 'axios';\nconst genres = [];\nconst animatedComponents = makeAnimated();\n\nclass AxiosExample extends React.Component {\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n    this.state = {\n      example: null,\n      exampleArray: []\n    };\n  }\n\n  componentDidMount() {\n    //creates a k,v pair list for genres that will be fed into react-select\n    axios.get(`http://localhost:5000/example`).then(response => {\n      //alert(response.data.data)\n      this.setState({\n        example: response.data.data\n      });\n    }).catch(error => {\n      alert(\"There was an error connecting to the api\");\n      console.error(error);\n    }); //secong get request\n\n    axios.get(`http://localhost:5000/exampleArray`).then(response => {\n      //alert(response.data.data)\n      //we have to set a temp array and then set that equal to that state\n      //this is beacause state arrays have no simple push feature, only setState\n      var songnames = [];\n      var songartists = [];\n      var songgenres = [];\n      var songduration = [];\n\n      for (var i = 0; i < response.data.data[0].length; i++) {\n        songnames.push(response[0].data.data[0][i]);\n        console.log(response.data.data[0][i]);\n      }\n\n      for (var i = 0; i < response.data.data[1].length; i++) {\n        songartists.push(response[1].data.data[1][i]);\n        console.log(response.data.data[1][i]);\n      }\n\n      for (var i = 0; i < response.data.data[2].length; i++) {\n        songduration.push(response[2].data.data[2][i]);\n        console.log(response.data.data[2][i]);\n      }\n\n      for (var i = 0; i < response.data.data[3].length; i++) {\n        songgenres.push(response.data.data[3][i]);\n        console.log(response.data.data[3][i]);\n      }\n\n      this.setState({\n        exampleArray: songnames,\n        exampleArray2: songartists,\n        exampleArray3: songduration,\n        exampleArray4: songgenres\n      });\n    }).catch(error => {\n      //alert(\"There was an error connecting to the api\")\n      console.error(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, this.state.example), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, this.state.exampleArray.map((item, key) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, item), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, \"you can add any html to this loop!\")))));\n  }\n\n}\n\nexport default AxiosExample;","map":{"version":3,"sources":["/Users/lexiewebel/Desktop/vibecheck/frontend/src/pages/AxiosExample.js"],"names":["React","Redirect","Select","makeAnimated","axios","genres","animatedComponents","AxiosExample","Component","constructor","state","example","exampleArray","componentDidMount","get","then","response","setState","data","catch","error","alert","console","songnames","songartists","songgenres","songduration","i","length","push","log","exampleArray2","exampleArray3","exampleArray4","render","map","item","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport './loginsignup.css';\nimport axios from 'axios';\n\nconst genres = []\nconst animatedComponents = makeAnimated();\nclass AxiosExample extends React.Component {\n\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n    this.state = {\n      example: null,\n      exampleArray: [],\n    };\n  }\n\n  componentDidMount() {\n\n    //creates a k,v pair list for genres that will be fed into react-select\n    axios.get(`http://localhost:5000/example`)\n      .then((response) => {\n        //alert(response.data.data)\n\n        this.setState({\n          example: response.data.data\n        });\n\n      }).catch((error) => {\n        alert(\"There was an error connecting to the api\")\n        console.error(error);\n      });\n\n    //secong get request\n    axios.get(`http://localhost:5000/exampleArray`)\n      .then((response) => {\n        //alert(response.data.data)\n        //we have to set a temp array and then set that equal to that state\n        //this is beacause state arrays have no simple push feature, only setState\n        var songnames = []\n        var songartists = []\n        var songgenres = []\n        var songduration = []\n\n        for (var i = 0; i < response.data.data[0].length; i++) {\n          songnames.push(response[0].data.data[0][i])\n          console.log(response.data.data[0][i])\n        }\n        for (var i = 0; i < response.data.data[1].length; i++) {\n          songartists.push(response[1].data.data[1][i])\n          console.log(response.data.data[1][i])\n        }\n        for (var i = 0; i < response.data.data[2].length; i++) {\n          songduration.push(response[2].data.data[2][i])\n          console.log(response.data.data[2][i])\n        }\n        for (var i = 0; i < response.data.data[3].length; i++) {\n          songgenres.push(response.data.data[3][i])\n          console.log(response.data.data[3][i])\n        }\n\n        this.setState({\n          exampleArray: songnames,\n          exampleArray2: songartists,\n          exampleArray3: songduration,\n          exampleArray4: songgenres\n\n        });\n\n      }).catch((error) => {\n        //alert(\"There was an error connecting to the api\")\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <div >\n        {/*React states can be called directly in the html*/}\n        <h2>{this.state.example}</h2>\n        {/*In React, map is the equivalent of a loop for html. it requires (key, value) assignments*/}\n        <ul>\n          {this.state.exampleArray.map((item, key) =>\n            <div>\n              <h1>{item}</h1>\n              <p>you can add any html to this loop!</p>\n            </div>\n          )}\n        </ul>\n\n      </div>\n    )\n  }\n}\nexport default AxiosExample;\n"]},"metadata":{},"sourceType":"module"}
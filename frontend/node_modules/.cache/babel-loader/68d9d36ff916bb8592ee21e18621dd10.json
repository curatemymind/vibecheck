{"ast":null,"code":"var _jsxFileName = \"/Users/lexiewebel/Desktop/vibecheck/frontend/src/pages/AxiosExample.js\";\nimport React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport './loginsignup.css';\nimport axios from 'axios';\nconst genres = [];\nconst animatedComponents = makeAnimated();\n\nclass AxiosExample extends React.Component {\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n    this.state = {\n      example: null,\n      exampleArray: []\n    };\n  }\n\n  componentDidMount() {\n    //creates a k,v pair list for genres that will be fed into react-select\n    axios.get(`http://localhost:5000/example`).then(response => {\n      //alert(response.data.data)\n      this.setState({\n        example: response.data.data\n      });\n    }).catch(error => {\n      alert(\"There was an error connecting to the api\");\n      console.error(error);\n    }); //secong get request\n\n    axios.get(`http://localhost:5000/exampleArray`).then(response => {\n      //alert(response.data.data)\n      //we have to set a temp array and then set that equal to that state\n      //this is beacause state arrays have no simple push feature, only setState\n      var mack = [];\n\n      for (var i = 0; i < response.data.data.length; i++) {\n        mack.push(response.data.data[i]);\n      }\n\n      this.setState({\n        exampleArray: mack\n      });\n    }).catch(error => {\n      //alert(\"There was an error connecting to the api\")\n      console.error(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"Playlist Name\"), /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, this.state.exampleArray.map((item, key) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, item[0])))));\n  }\n\n}\n\nexport default AxiosExample;","map":{"version":3,"sources":["/Users/lexiewebel/Desktop/vibecheck/frontend/src/pages/AxiosExample.js"],"names":["React","Redirect","Select","makeAnimated","axios","genres","animatedComponents","AxiosExample","Component","constructor","state","example","exampleArray","componentDidMount","get","then","response","setState","data","catch","error","alert","console","mack","i","length","push","render","map","item","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAO,mBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG,EAAf;AACA,MAAMC,kBAAkB,GAAGH,YAAY,EAAvC;;AACA,MAAMI,YAAN,SAA2BP,KAAK,CAACQ,SAAjC,CAA2C;AAEzC;AACAC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAElB;AACAT,IAAAA,KAAK,CAACU,GAAN,CAAW,+BAAX,EACGC,IADH,CACSC,QAAD,IAAc;AAClB;AAEA,WAAKC,QAAL,CAAc;AACZN,QAAAA,OAAO,EAAEK,QAAQ,CAACE,IAAT,CAAcA;AADX,OAAd;AAID,KARH,EAQKC,KARL,CAQYC,KAAD,IAAW;AAClBC,MAAAA,KAAK,CAAC,0CAAD,CAAL;AACAC,MAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACD,KAXH,EAHkB,CAgBlB;;AACAhB,IAAAA,KAAK,CAACU,GAAN,CAAW,oCAAX,EACGC,IADH,CACSC,QAAD,IAAc;AAClB;AACA;AACA;AACA,UAAIO,IAAI,GAAG,EAAX;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBO,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAClDD,QAAAA,IAAI,CAACG,IAAL,CAAUV,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBM,CAAnB,CAAV;AACD;;AAED,WAAKP,QAAL,CAAc;AACZL,QAAAA,YAAY,EAAEW;AADF,OAAd;AAKD,KAhBH,EAgBKJ,KAhBL,CAgBYC,KAAD,IAAW;AAClB;AACAE,MAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACD,KAnBH;AAoBD;;AAEDO,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAGI;AAAI,MAAA,EAAE,EAAC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKjB,KAAL,CAAWE,YAAX,CAAwBgB,GAAxB,CAA4B,CAACC,IAAD,EAAOC,GAAP,kBAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAAC,CAAD,CAAT,CADF,CADD,CADD,CAHJ,CADF;AAcD;;AAlEwC;;AAoE3C,eAAetB,YAAf","sourcesContent":["import React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport './loginsignup.css';\nimport axios from 'axios';\n\nconst genres = []\nconst animatedComponents = makeAnimated();\nclass AxiosExample extends React.Component {\n\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n    this.state = {\n      example: null,\n      exampleArray: []\n    };\n  }\n\n  componentDidMount() {\n\n    //creates a k,v pair list for genres that will be fed into react-select\n    axios.get(`http://localhost:5000/example`)\n      .then((response) => {\n        //alert(response.data.data)\n\n        this.setState({\n          example: response.data.data\n        });\n\n      }).catch((error) => {\n        alert(\"There was an error connecting to the api\")\n        console.error(error);\n      });\n\n    //secong get request\n    axios.get(`http://localhost:5000/exampleArray`)\n      .then((response) => {\n        //alert(response.data.data)\n        //we have to set a temp array and then set that equal to that state\n        //this is beacause state arrays have no simple push feature, only setState\n        var mack = []\n    \n        for (var i = 0; i < response.data.data.length; i++) {\n          mack.push(response.data.data[i])\n        }\n       \n        this.setState({\n          exampleArray: mack,\n        \n        });\n\n      }).catch((error) => {\n        //alert(\"There was an error connecting to the api\")\n        console.error(error);\n      });\n  }\n\n  render() {\n\n    return (\n      <div >\n        <h2>Playlist Name</h2>\n        {/*In React, map is the equivalent of a loop for html. it requires (key, value) assignments*/}\n          <ul id=\"menu\">\n          {this.state.exampleArray.map((item, key) =>\n            <div>\n              <li>{item[0]}</li>\n            </div>\n          )}\n        </ul>\n      \n      </div>\n    )\n  }\n}\nexport default AxiosExample;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/lexiewebel/Desktop/vibecheck/frontend/src/pages/AxiosExample.js\";\nimport React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport './loginsignup.css';\nimport axios from 'axios';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nconst genres = [];\nconst animatedComponents = makeAnimated();\n\nclass AxiosExample extends React.Component {\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n    this.state = {\n      example: null,\n      exampleArray: []\n    };\n  }\n\n  componentDidMount() {\n    //creates a k,v pair list for genres that will be fed into react-select\n    axios.get(`http://localhost:5000/example`).then(response => {\n      //alert(response.data.data)\n      this.setState({\n        example: response.data.data\n      });\n    }).catch(error => {\n      alert(\"There was an error connecting to the api\");\n      console.error(error);\n    }); //secong get request\n\n    axios.get(`http://localhost:5000/exampleArray`).then(response => {\n      //alert(response.data.data)\n      //we have to set a temp array and then set that equal to that state\n      //this is beacause state arrays have no simple push feature, only setState\n      var mack = [];\n\n      for (var i = 0; i < response.data.data.length; i++) {\n        mack.push(response.data.data[i]);\n      }\n\n      this.setState({\n        exampleArray: mack\n      });\n    }).catch(error => {\n      //alert(\"There was an error connecting to the api\")\n      console.error(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"btn-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://localhost:3000/playlist\",\n      class: \"btn btn-primary btn-lg\",\n      role: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Create New Playlist\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://localhost:3000/\",\n      class: \"btn btn-primary btn-lg\",\n      role: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Log Out\")), /*#__PURE__*/React.createElement(\"label\", {\n      class: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"PLAYLIST ID TO DELETE\"), /*#__PURE__*/React.createElement(\"input\", {\n      requiredplaceholder: \"Playlist ID\",\n      type: \"text\",\n      value: this.state.playlistName,\n      onChange: this.handleChange,\n      class: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), this.state.exampleArray.map((item, key) => /*#__PURE__*/React.createElement(Accordion, {\n      defaultActiveKey: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 16\n      }\n    }, item[1], \" - \", item[3], \"  (\", item[2], \") - id = \", item[0]))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \" \", item[4].map((song, key2) => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }, song[0], \" by \", song[1], \" - \", song[2], \" \"))))))));\n  }\n\n}\n\nexport default AxiosExample;","map":{"version":3,"sources":["/Users/lexiewebel/Desktop/vibecheck/frontend/src/pages/AxiosExample.js"],"names":["React","Redirect","Select","makeAnimated","axios","Accordion","Card","Button","genres","animatedComponents","AxiosExample","Component","constructor","state","example","exampleArray","componentDidMount","get","then","response","setState","data","catch","error","alert","console","mack","i","length","push","render","playlistName","handleChange","map","item","key","song","key2"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport './loginsignup.css';\nimport axios from 'axios';\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\n\nconst genres = []\nconst animatedComponents = makeAnimated();\nclass AxiosExample extends React.Component {\n\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n    this.state = {\n      example: null,\n      exampleArray: []\n    };\n  }\n\n  componentDidMount() {\n\n    //creates a k,v pair list for genres that will be fed into react-select\n    axios.get(`http://localhost:5000/example`)\n      .then((response) => {\n        //alert(response.data.data)\n\n        this.setState({\n          example: response.data.data\n        });\n\n      }).catch((error) => {\n        alert(\"There was an error connecting to the api\")\n        console.error(error);\n      });\n\n    //secong get request\n    axios.get(`http://localhost:5000/exampleArray`)\n      .then((response) => {\n        //alert(response.data.data)\n        //we have to set a temp array and then set that equal to that state\n        //this is beacause state arrays have no simple push feature, only setState\n        var mack = []\n\n        for (var i = 0; i < response.data.data.length; i++) {\n          mack.push(response.data.data[i])\n        }\n\n        this.setState({\n          exampleArray: mack,\n\n        });\n\n      }).catch((error) => {\n        //alert(\"There was an error connecting to the api\")\n        console.error(error);\n      });\n  }\n\n  render() {\n\n    return (\n      <div >\n        <br></br>\n        <div class=\"btn-group\">\n\n          <a href=\"http://localhost:3000/playlist\" class=\"btn btn-primary btn-lg\" role=\"button\">Create New Playlist</a>\n          <a href=\"http://localhost:3000/\" class=\"btn btn-primary btn-lg\" role=\"button\">Log Out</a>\n          \n        </div>\n        <label class=\"label\">PLAYLIST ID TO DELETE</label>\n                  <input requiredplaceholder= \"Playlist ID\" type=\"text\" value={this.state.playlistName} onChange={this.handleChange} class=\"input\" />\n                  <br></br>\n        <br></br>\n\n        {/*In React, map is the equivalent of a loop for html. it requires (key, value) assignments*/}\n        <br></br>\n\n        {this.state.exampleArray.map((item, key) =>\n          <Accordion defaultActiveKey=\"1\">\n            <Card>\n              <Card.Header>\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n               <h2>{item[1]} - {item[3]}  ({item[2]}) - id = {item[0]}</h2>   \n                </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey=\"0\">\n                <Card.Body> {(item[4]).map((song, key2) =>\n                  <li>{song[0]} by {song[1]} - {song[2]} </li>\n                )}</Card.Body>\n              </Accordion.Collapse>\n            </Card>\n\n          </Accordion>\n        )}\n\n\n\n      </div>\n\n    )\n\n  }\n}\nexport default AxiosExample;\n"]},"metadata":{},"sourceType":"module"}
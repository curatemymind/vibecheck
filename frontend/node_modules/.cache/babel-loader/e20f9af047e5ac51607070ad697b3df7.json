{"ast":null,"code":"var _jsxFileName = \"/Users/innovation/Desktop/vibecheck/frontend/src/pages/Playlist.js\";\nimport React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst genres = [];\nconst animatedComponents = makeAnimated();\n\nclass Playlist extends React.Component {\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n\n    this.handleGenres = genreChange => {\n      var string = \"\";\n      var finalGenres = [];\n\n      if (genreChange != null) {\n        if (genreChange.length >= 3) {\n          for (var i = genreChange.length - 3; i < genreChange.length; i++) {\n            finalGenres.push(genreChange[i]['value']);\n          }\n\n          alert(finalGenres);\n          axios.get(`http://localhost:5000/recommendations`).then(response => {\n            var length = response.data.data.tracks.length;\n            var tempArr = [];\n\n            for (var i = 0; i < length; i++) {\n              tempArr.push(response.data.data.tracks[i].artists[0].name);\n            }\n\n            this.setState({\n              recArtists: tempArr\n            });\n          }).catch(error => {\n            alert(\"There was an error connecting to the api\");\n            console.error(error);\n          });\n        }\n      }\n    };\n\n    this.state = {\n      data: null,\n      genres: null,\n      recArtists: null\n    };\n  }\n\n  componentDidMount() {\n    const axios = require('axios');\n\n    axios.get(`http://localhost:5000/allGenres`).then(response => {\n      for (var i = 0; i < response.data.data.genres.length; i++) {\n        genres.push({\n          label: response.data.data.genres[i],\n          value: response.data.data.genres[i]\n        });\n      }\n\n      this.setState({\n        genres: response.data.data.genres\n      });\n    }).catch(error => {\n      alert(\"There was an error connecting to the api\");\n      console.error(error);\n    });\n  }\n\n  render() {\n    if (this.state.genres != null) {\n      this.items = this.state.genres.map((item, key) => /*#__PURE__*/React.createElement(\"option\", {\n        name: item,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, item));\n    }\n\n    if (this.state.recArtists != null) {\n      this.artists = this.state.recArtists.map((item, key) => /*#__PURE__*/React.createElement(\"option\", {\n        name: item,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, item));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, \"hello\"), /*#__PURE__*/React.createElement(\"form\", {\n      action: \"http://localhost:5000/user\",\n      method: \"POST\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      options: genres,\n      onChange: this.handleGenres,\n      components: animatedComponents,\n      isMulti: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"artists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, \"Choose three artists:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"artists\",\n      id: \"artists\",\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, this.artists), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Playlist;","map":{"version":3,"sources":["/Users/innovation/Desktop/vibecheck/frontend/src/pages/Playlist.js"],"names":["React","Redirect","Select","makeAnimated","genres","animatedComponents","Playlist","Component","constructor","handleGenres","genreChange","string","finalGenres","length","i","push","alert","axios","get","then","response","data","tracks","tempArr","artists","name","setState","recArtists","catch","error","console","state","componentDidMount","require","label","value","render","items","map","item","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst genres = []\nconst animatedComponents = makeAnimated();\nclass Playlist extends React.Component {\n\n\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n    this.state = {\n      data: null,\n      genres: null,\n      recArtists: null,\n    };\n  } \n\n  componentDidMount() {\n    const axios = require('axios');\n    \n    axios.get(`http://localhost:5000/allGenres`)\n      .then((response) => {\n\n        for (var i = 0; i < response.data.data.genres.length; i++) {\n          genres.push({ label: response.data.data.genres[i], value: response.data.data.genres[i] })\n        }\n\n        this.setState({\n          genres: response.data.data.genres\n        });\n      }).catch((error) => {\n        alert(\"There was an error connecting to the api\")\n        console.error(error);\n      });\n\n  }\n\n  handleGenres = genreChange => {\n    var string = \"\"\n    var finalGenres = []\n\n    if (genreChange != null) {\n      if (genreChange.length >= 3) {\n        \n        for (var i = genreChange.length - 3; i < genreChange.length; i++) {\n          finalGenres.push(genreChange[i]['value'])\n        }\n        alert(finalGenres)\n        axios.get(`http://localhost:5000/recommendations`)\n      .then((response) => {\n        var length = (response.data.data.tracks.length)\n\n        var tempArr = []\n        for (var i = 0; i < length; i++) {\n          tempArr.push(response.data.data.tracks[i].artists[0].name)\n        }\n        this.setState({\n          recArtists: tempArr\n        });\n      }).catch((error) => {\n        alert(\"There was an error connecting to the api\")\n        console.error(error);\n      });\n      }\n    }\n  };\n\n  render() {\n    if (this.state.genres != null) {\n      this.items = this.state.genres.map((item, key) =>\n        <option name={item} key={key}>{item}</option>\n      );\n    }\n\n    if (this.state.recArtists != null) {\n      this.artists = this.state.recArtists.map((item, key) =>\n        <option name={item} key={key}>{item}</option>\n      );\n    }\n\n    return (\n      <div>\n      <h1>hello</h1>\n      <form action='http://localhost:5000/user' method='POST'>\n         <div className=\"col-md-4\">\n        \n          <Select options={genres} onChange={this.handleGenres} components={animatedComponents} isMulti />\n            <br></br>\n            <label for=\"artists\">Choose three artists:</label>\n            <br></br>\n            <select name=\"artists\" id=\"artists\" multiple>\n              {this.artists}\n            </select>\n            <br></br>\n          </div>\n       \n      </form>\n      </div>\n    )\n  }\n}\nexport default Playlist;\n"]},"metadata":{},"sourceType":"module"}
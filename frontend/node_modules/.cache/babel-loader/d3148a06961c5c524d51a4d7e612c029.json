{"ast":null,"code":"var _jsxFileName = \"/Users/innovation/Desktop/vibecheck/frontend/src/pages/Playlist.js\";\nimport React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nconst genres = [];\nconst animatedComponents = makeAnimated();\nconst Vibes = [{\n  label: \"Funky\",\n  value: \"Funky\"\n}, {\n  label: \"Happy\",\n  value: \"Happy\"\n}, {\n  label: \"Sad\",\n  value: \"Sad\"\n}, {\n  label: \"Chill\",\n  value: \"Chill\"\n}, {\n  label: \"Flirty\",\n  value: \"Flirty\"\n}, {\n  label: \"Study\",\n  value: \"Study\"\n}, {\n  label: \"Workout\",\n  value: \"Workout\"\n}, {\n  label: \"Nostalgic\",\n  value: \"Nostalgic\"\n}];\n\nclass Playlist extends React.Component {\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n\n    this.handleVibe = newVibe => {\n      this.setState({\n        vibe: newVibe['label']\n      });\n    };\n\n    this.handleGenres = genreChange => {\n      var string = \"\";\n      var finalGenres = [];\n\n      if (genreChange != null) {\n        if (genreChange.length >= 3) {\n          const axios = require('axios');\n\n          for (var i = genreChange.length - 3; i < genreChange.length; i++) {\n            finalGenres.push(genreChange[i]['value']);\n          }\n\n          alert(finalGenres);\n          const genresSelected = {\n            genresSelected: \"jhello\"\n          };\n          axios.post(`http://localhost:5000/recommendations`, genresSelected).then(response => {\n            var length = response.data.data.tracks.length;\n            var tempArr = [];\n\n            for (var i = 0; i < length; i++) {\n              tempArr.push(response.data.data.tracks[i].artists[0].name);\n            }\n\n            this.setState({\n              recArtists: tempArr\n            });\n          }).catch(error => {\n            alert(\"There was an error connecting to the api\");\n            console.error(error);\n          });\n        }\n      }\n    };\n\n    this.state = {\n      data: null,\n      genres: null,\n      recArtists: null,\n      vibe: \"Funky\"\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:5000/allGenres`).then(response => {\n      for (var i = 0; i < response.data.data.genres.length; i++) {\n        genres.push({\n          label: response.data.data.genres[i],\n          value: response.data.data.genres[i]\n        });\n      }\n\n      this.setState({\n        genres: response.data.data.genres\n      });\n    }).catch(error => {\n      alert(\"There was an error connecting to the api\");\n      console.error(error);\n    });\n  }\n\n  render() {\n    if (this.state.genres != null) {\n      this.items = this.state.genres.map((item, key) => /*#__PURE__*/React.createElement(\"option\", {\n        name: item,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, item));\n    }\n\n    if (this.state.recArtists != null) {\n      this.artists = this.state.recArtists.map((item, key) => /*#__PURE__*/React.createElement(\"option\", {\n        name: item,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, item));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: \"http://localhost:5000/newPlaylist\",\n      method: \"POST\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, \"Select Vibe\"), /*#__PURE__*/React.createElement(Select, {\n      options: Vibes,\n      onChange: this.handleVibe,\n      components: animatedComponents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, \"Select Genres\"), /*#__PURE__*/React.createElement(Select, {\n      options: genres,\n      onChange: this.handleGenres,\n      components: animatedComponents,\n      isMulti: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"artists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, \"Choose three artists:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"artists\",\n      id: \"artists\",\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, this.artists), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default Playlist;","map":{"version":3,"sources":["/Users/innovation/Desktop/vibecheck/frontend/src/pages/Playlist.js"],"names":["React","Redirect","Select","makeAnimated","axios","genres","animatedComponents","Vibes","label","value","Playlist","Component","constructor","handleVibe","newVibe","setState","vibe","handleGenres","genreChange","string","finalGenres","length","require","i","push","alert","genresSelected","post","then","response","data","tracks","tempArr","artists","name","recArtists","catch","error","console","state","componentDidMount","get","render","items","map","item","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\n\nconst genres = []\nconst animatedComponents = makeAnimated();\n\n\nconst Vibes = [\n  { label: \"Funky\", value: \"Funky\" },\n  { label: \"Happy\", value: \"Happy\" },\n  { label: \"Sad\", value: \"Sad\" },\n  { label: \"Chill\", value: \"Chill\" },\n  { label: \"Flirty\", value: \"Flirty\" },\n  { label: \"Study\", value: \"Study\" },\n  { label: \"Workout\", value: \"Workout\" },\n  { label: \"Nostalgic\", value: \"Nostalgic\" }\n];\n\nclass Playlist extends React.Component {\n\n\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n    this.state = {\n      data: null,\n      genres: null,\n      recArtists: null,\n      vibe: \"Funky\"\n    };\n  }\n\n  componentDidMount() {\n\n    axios.get(`http://localhost:5000/allGenres`)\n      .then((response) => {\n\n        for (var i = 0; i < response.data.data.genres.length; i++) {\n          genres.push({ label: response.data.data.genres[i], value: response.data.data.genres[i] })\n        }\n\n        this.setState({\n          genres: response.data.data.genres\n        });\n      }).catch((error) => {\n        alert(\"There was an error connecting to the api\")\n        console.error(error);\n      });\n\n  }\n\n  handleVibe = newVibe => {\n    this.setState({vibe: newVibe['label']})\n  };\n\n  handleGenres = genreChange => {\n    var string = \"\"\n    var finalGenres = []\n\n    if (genreChange != null) {\n      if (genreChange.length >= 3) {\n        const axios = require('axios');\n        for (var i = genreChange.length - 3; i < genreChange.length; i++) {\n          finalGenres.push(genreChange[i]['value'])\n        }\n        alert(finalGenres)\n        \n        const genresSelected = {\n          genresSelected: \"jhello\"\n        };\n    \n        axios.post(`http://localhost:5000/recommendations`, genresSelected)\n          .then((response) => {\n            var length = (response.data.data.tracks.length)\n\n            var tempArr = []\n            for (var i = 0; i < length; i++) {\n              tempArr.push(response.data.data.tracks[i].artists[0].name)\n            }\n            this.setState({\n              recArtists: tempArr\n            });\n          }).catch((error) => {\n            alert(\"There was an error connecting to the api\")\n            console.error(error);\n          });\n      }\n    }\n  };\n\n  render() {\n    if (this.state.genres != null) {\n      this.items = this.state.genres.map((item, key) =>\n        <option name={item} key={key}>{item}</option>\n      );\n    }\n\n    if (this.state.recArtists != null) {\n      this.artists = this.state.recArtists.map((item, key) =>\n        <option name={item} key={key}>{item}</option>\n      );\n    }\n\n    return (\n      <div>\n        <form action='http://localhost:5000/newPlaylist' method='POST'>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-3\"></div>\n              <div className=\"col-md-6\">\n                <h1>Select Vibe</h1>\n                <Select options={Vibes} onChange={this.handleVibe} components={animatedComponents}\n                />\n                <br></br>\n                <h1>Select Genres</h1>\n                <Select options={genres} onChange={this.handleGenres} components={animatedComponents} isMulti />\n                <br></br>\n                <label for=\"artists\">Choose three artists:</label>\n                <br></br>\n                <select name=\"artists\" id=\"artists\" multiple>\n                  {this.artists}\n                </select>\n\n                <br></br>\n\n              </div>\n              <div className=\"col-md-4\"></div>\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\nexport default Playlist;\n"]},"metadata":{},"sourceType":"module"}
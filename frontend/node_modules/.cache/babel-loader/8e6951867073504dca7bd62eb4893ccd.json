{"ast":null,"code":"var _jsxFileName = \"/Users/innovation/Desktop/vibecheck/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './vibecheck.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\nimport Home from './pages/Home';\nimport App from './pages/App';\nimport NewPlay from './pages/minorComponents/NewPlay';\n/*using react router we set a constant equal to whatever component\nwe would like to render*/\n\nconst routing = /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Switch, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: Home,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/test\",\n  component: App,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }\n})));\n/*the code below reads the path and renders component on a conditional basis.\ni.e. /home throws two different components at different places...*/\n\nReactDOM.render(routing, document.getElementById(\"root\"));\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/innovation/Desktop/vibecheck/frontend/src/index.js"],"names":["React","ReactDOM","serviceWorker","Switch","Route","BrowserRouter","Router","Home","App","NewPlay","routing","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,iBAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,aAAa,IAAIC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AAGA;AACA;;AACA,MAAMC,OAAO,gBACX,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,GAAlB;AAAsB,EAAA,SAAS,EAAEH,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,OAAlB;AAA0B,EAAA,SAAS,EAAEC,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF,CADF;AASA;AACA;;AACAP,QAAQ,CAACU,MAAT,CAAgBD,OAAhB,EAAyBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;AACAX,aAAa,CAACY,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './vibecheck.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\nimport Home from './pages/Home'\nimport App from './pages/App'\nimport NewPlay from './pages/minorComponents/NewPlay'\n\n  \n/*using react router we set a constant equal to whatever component\nwe would like to render*/\nconst routing = (\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={Home}/> \n      <Route exact path=\"/test\" component={App}/>  \n    </Switch>\n  </Router>\n)\n\n/*the code below reads the path and renders component on a conditional basis.\ni.e. /home throws two different components at different places...*/\nReactDOM.render(routing, document.getElementById(\"root\"));\nserviceWorker.unregister();"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/innovation/Desktop/vibecheck/frontend/src/pages/Playlist.js\";\nimport React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nconst genres = [];\nconst recommended = [];\nconst animatedComponents = makeAnimated();\nconst Vibes = [{\n  label: \"Funky\",\n  value: \"Funky\"\n}, {\n  label: \"Happy\",\n  value: \"Happy\"\n}, {\n  label: \"Sad\",\n  value: \"Sad\"\n}, {\n  label: \"Chill\",\n  value: \"Chill\"\n}, {\n  label: \"Flirty\",\n  value: \"Flirty\"\n}, {\n  label: \"Study\",\n  value: \"Study\"\n}, {\n  label: \"Workout\",\n  value: \"Workout\"\n}, {\n  label: \"Nostalgic\",\n  value: \"Nostalgic\"\n}];\n\nclass Playlist extends React.Component {\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n\n    this.handleVibe = newVibe => {\n      //handles updating the state for vibe\n      this.setState({\n        vibe: newVibe['label']\n      });\n    };\n\n    this.handleGenres = genreChange => {\n      var string = \"\";\n      var finalGenres = [];\n\n      if (genreChange != null) {\n        if (genreChange.length >= 3) {\n          if (genreChange.length === 3) {\n            //ensures only three genres are sent over as seeds\n            for (var i = genreChange.length - 3; i < genreChange.length; i++) {\n              finalGenres.push(genreChange[i]['value']);\n            } //a custom axios post request to ensure data is sent over...\n            //in this case, data is sent in params attribute\n\n\n            const request = axios({\n              headers: {\n                'content-type': 'application/json'\n              },\n              method: 'post',\n              url: `http://localhost:5000/recommendations`,\n              params: {\n                finalGenres\n              }\n            }).then(response => {\n              var length = response.data.data.tracks.length;\n\n              for (var i = 0; i < length; i++) {\n                recommended.push({\n                  label: response.data.data.tracks[i].artists[0].name,\n                  value: response.data.data.tracks[i].artists[0].name\n                });\n              }\n            }).catch(error => {\n              alert(\"There was an error connecting to the api\");\n              console.error(error);\n            });\n          } else {\n            alert(\"You must ONLY have three genres.\");\n          }\n        }\n      }\n    };\n\n    this.state = {\n      data: null,\n      genres: null,\n      recArtists: null,\n      vibe: \"Funky\"\n    };\n  }\n\n  componentDidMount() {\n    //creates a k,v pair list for genres that will be fed into react-select\n    axios.get(`http://localhost:5000/allGenres`).then(response => {\n      for (var i = 0; i < response.data.data.genres.length; i++) {\n        genres.push({\n          label: response.data.data.genres[i],\n          value: response.data.data.genres[i]\n        });\n      }\n\n      this.setState({\n        genres: response.data.data.genres\n      });\n    }).catch(error => {\n      alert(\"There was an error connecting to the api\");\n      console.error(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: \"http://localhost:5000/newPlaylist\",\n      method: \"POST\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, \"Select Vibe\"), /*#__PURE__*/React.createElement(Select, {\n      options: Vibes,\n      onChange: this.handleVibe,\n      components: animatedComponents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, \"Select Genres\"), /*#__PURE__*/React.createElement(Select, {\n      options: genres,\n      onChange: this.handleGenres,\n      components: animatedComponents,\n      isMulti: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, \"Select Artists\"), /*#__PURE__*/React.createElement(Select, {\n      options: recommended,\n      components: animatedComponents,\n      isMulti: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\n\nexport default Playlist;","map":{"version":3,"sources":["/Users/innovation/Desktop/vibecheck/frontend/src/pages/Playlist.js"],"names":["React","Redirect","Select","makeAnimated","axios","genres","recommended","animatedComponents","Vibes","label","value","Playlist","Component","constructor","handleVibe","newVibe","setState","vibe","handleGenres","genreChange","string","finalGenres","length","i","push","request","headers","method","url","params","then","response","data","tracks","artists","name","catch","error","alert","console","state","recArtists","componentDidMount","get","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\n\nconst genres = []\nconst recommended = []\nconst animatedComponents = makeAnimated();\n\nconst Vibes = [\n{ label: \"Funky\", value: \"Funky\" },\n{ label: \"Happy\", value: \"Happy\" },\n{ label: \"Sad\", value: \"Sad\" },\n{ label: \"Chill\", value: \"Chill\" },\n{ label: \"Flirty\", value: \"Flirty\" },\n{ label: \"Study\", value: \"Study\" },\n{ label: \"Workout\", value: \"Workout\" },\n{ label: \"Nostalgic\", value: \"Nostalgic\" }\n];\n\nclass Playlist extends React.Component {\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n    this.state = {\n        data: null,\n        genres: null,\n        recArtists: null,\n        vibe: \"Funky\"\n      };\n  }\n\n  componentDidMount() {\n\n    //creates a k,v pair list for genres that will be fed into react-select\n    axios.get(`http://localhost:5000/allGenres`)\n    .then((response) => {\n      for (var i = 0; i < response.data.data.genres.length; i++) {\n      genres.push({ label: response.data.data.genres[i], value: response.data.data.genres[i] })\n      }\n      \n      this.setState({\n        genres: response.data.data.genres\n      });\n\n    }).catch((error) => {\n      alert(\"There was an error connecting to the api\")\n      console.error(error);\n    });\n\n  }\n\n  handleVibe = newVibe => {\n    //handles updating the state for vibe\n    this.setState({vibe: newVibe['label']})\n  };\n\n  //creates a k,v pair list for artists from a certaini genre that will be fed into react-select\n  handleGenres = genreChange => {\n    var string = \"\"\n    var finalGenres = []\n\n    if (genreChange != null) {\n      if (genreChange.length >= 3) {\n        if(genreChange.length === 3) {\n          //ensures only three genres are sent over as seeds\n          for (var i = genreChange.length - 3; i < genreChange.length; i++) {\n            finalGenres.push(genreChange[i]['value'])\n          }\n          //a custom axios post request to ensure data is sent over...\n          //in this case, data is sent in params attribute\n          const request = axios({\n            headers: {\n            'content-type': 'application/json'\n            },\n            method: 'post',\n            url: `http://localhost:5000/recommendations`,\n            params: {\n            finalGenres\n            }\n          })\n          .then((response) => {\n            var length = (response.data.data.tracks.length)\n            for (var i = 0; i < length; i++) {\n            recommended.push({label: response.data.data.tracks[i].artists[0].name, value: response.data.data.tracks[i].artists[0].name})\n            }\n          }).catch((error) => {\n            alert(\"There was an error connecting to the api\")\n            console.error(error);\n          });\n        }\n        else {\n          alert(\"You must ONLY have three genres.\")\n        }\n      }\n    }\n  };\n\n  render() \n    {\n      return (\n        <div>\n          <form action='http://localhost:5000/newPlaylist' method='POST'>\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <h1>Select Vibe</h1>\n                  <Select options={Vibes} onChange={this.handleVibe} components={animatedComponents}\n                  />\n                  <br></br>\n                  <h1>Select Genres</h1>\n                  <Select options={genres} onChange={this.handleGenres} components={animatedComponents} isMulti />\n                  <br></br>\n                  <h1>Select Artists</h1>\n                  <Select options={recommended} components={animatedComponents} isMulti />\n                  <br></br>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      )\n    }\n}\nexport default Playlist;"]},"metadata":{},"sourceType":"module"}
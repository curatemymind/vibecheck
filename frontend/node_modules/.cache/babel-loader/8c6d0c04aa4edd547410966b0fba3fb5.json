{"ast":null,"code":"var _jsxFileName = \"/Users/lexiewebel/Desktop/vibecheck/frontend/src/pages/AxiosExample.js\";\nimport React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport './loginsignup.css';\nimport axios from 'axios';\nconst genres = [];\nconst animatedComponents = makeAnimated();\n\nclass AxiosExample extends React.Component {\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n    this.state = {\n      example: null,\n      exampleArray: [],\n      exampleArray2: []\n    };\n  }\n\n  componentDidMount() {\n    //creates a k,v pair list for genres that will be fed into react-select\n    axios.get(`http://localhost:5000/example`).then(response => {\n      //alert(response.data.data)\n      this.setState({\n        example: response.data.data\n      });\n    }).catch(error => {\n      alert(\"There was an error connecting to the api\");\n      console.error(error);\n    }); //secong get request\n\n    axios.get(`http://localhost:5000/exampleArray`).then(response => {\n      //alert(response.data.data)\n      //we have to set a temp array and then set that equal to that state\n      //this is beacause state arrays have no simple push feature, only setState\n      var mack = [];\n      var songs = [];\n\n      for (var i = 0; i < response.data.data.length; i++) {\n        mack.push(response.data.data[i]);\n        songs.push(response.data.data[i][2]);\n      }\n\n      this.setState({\n        exampleArray: mack,\n        exampleArray2: songs\n      });\n    }).catch(error => {\n      //alert(\"There was an error connecting to the api\")\n      console.error(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, this.state.exampleArray.map((item, key) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, \" Playlist Name: \", item[0]), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \" Vibe: \", item[1], \" \"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, \" Duration: \", item[2], \" \"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \"Songs:\"), this.state.exampleArray2.map((item, key) => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, item))))));\n  }\n\n}\n\nexport default AxiosExample;","map":{"version":3,"sources":["/Users/lexiewebel/Desktop/vibecheck/frontend/src/pages/AxiosExample.js"],"names":["React","Redirect","Select","makeAnimated","axios","genres","animatedComponents","AxiosExample","Component","constructor","state","example","exampleArray","exampleArray2","componentDidMount","get","then","response","setState","data","catch","error","alert","console","mack","songs","i","length","push","render","map","item","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport './loginsignup.css';\nimport axios from 'axios';\n\nconst genres = []\nconst animatedComponents = makeAnimated();\nclass AxiosExample extends React.Component {\n\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n    this.state = {\n      example: null,\n      exampleArray: [],\n      exampleArray2: []\n\n    };\n  }\n\n  componentDidMount() {\n\n    //creates a k,v pair list for genres that will be fed into react-select\n    axios.get(`http://localhost:5000/example`)\n      .then((response) => {\n        //alert(response.data.data)\n\n        this.setState({\n          example: response.data.data\n        });\n\n      }).catch((error) => {\n        alert(\"There was an error connecting to the api\")\n        console.error(error);\n      });\n\n    //secong get request\n    axios.get(`http://localhost:5000/exampleArray`)\n      .then((response) => {\n        //alert(response.data.data)\n        //we have to set a temp array and then set that equal to that state\n        //this is beacause state arrays have no simple push feature, only setState\n        var mack = []\n        var songs = []\n\n        for (var i = 0; i < response.data.data.length; i++) {\n          mack.push(response.data.data[i])\n          songs.push(response.data.data[i][2])\n        }\n       \n        this.setState({\n          exampleArray: mack,\n          exampleArray2: songs,\n        });\n\n      }).catch((error) => {\n        //alert(\"There was an error connecting to the api\")\n        console.error(error);\n      });\n  }\n\n  render() {\n\n    return (\n      <div >\n        \n        {/*In React, map is the equivalent of a loop for html. it requires (key, value) assignments*/}\n          <ul id=\"menu\">\n          {this.state.exampleArray.map((item, key) =>\n\n            <div>\n              <h2> Playlist Name: {item[0]}</h2>\n              <h2> Vibe: {item[1]} </h2>\n              <h2> Duration: {item[2]} </h2>\n              <h2>Songs:</h2>\n              {this.state.exampleArray2.map((item, key) =>\n              <li>{item}</li>\n               )}\n            </div>\n          )}\n        </ul>\n      \n      </div>\n    )\n  }\n}\nexport default AxiosExample;\n"]},"metadata":{},"sourceType":"module"}
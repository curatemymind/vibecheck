{"ast":null,"code":"var _jsxFileName = \"/Users/innovation/Desktop/vibecheck/frontend/src/pages/Home.js\";\nimport React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nconst genres = [];\nconst animatedComponents = makeAnimated();\n\nclass Home extends React.Component {\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n\n    this.handleGenres = genreChange => {\n      var string = \"\";\n      alert(genreChange.length);\n      /*for(var i = 0; i < genreChange.length; i++)\n      {\n        string += (newCountry[i]['label'] + \", \")\n      }\n      alert(string)*/\n    };\n\n    this.state = {\n      data: null,\n      genres: null,\n      recArtists: null\n    };\n  }\n\n  componentDidMount() {\n    const axios = require('axios');\n\n    axios.get(`http://localhost:5000/data`).then(response => {\n      this.setState({\n        data: JSON.stringify(response.data.data)\n      });\n    }).catch(error => {\n      alert(\"There was an error connecting to the api\");\n      console.error(error);\n    });\n    axios.get(`http://localhost:5000/allGenres`).then(response => {\n      for (var i = 0; i < response.data.data.genres.length; i++) {\n        genres.push({\n          label: response.data.data.genres[i],\n          value: response.data.data.genres[i]\n        });\n      }\n\n      this.setState({\n        genres: response.data.data.genres\n      });\n    }).catch(error => {\n      alert(\"There was an error connecting to the api\");\n      console.error(error);\n    });\n    axios.get(`http://localhost:5000/recommendations`).then(response => {\n      var length = response.data.data.tracks.length;\n      var tempArr = [];\n\n      for (var i = 0; i < length; i++) {\n        tempArr.push(response.data.data.tracks[i].artists[0].name);\n      }\n\n      this.setState({\n        recArtists: tempArr\n      });\n    }).catch(error => {\n      alert(\"There was an error connecting to the api\");\n      console.error(error);\n    });\n  }\n\n  render() {\n    if (this.state.genres != null) {\n      this.items = this.state.genres.map((item, key) => /*#__PURE__*/React.createElement(\"option\", {\n        name: item,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, item));\n    }\n\n    if (this.state.recArtists != null) {\n      this.artists = this.state.recArtists.map((item, key) => /*#__PURE__*/React.createElement(\"option\", {\n        name: item,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }, item));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, this.state.recArtists, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, this.state.data), /*#__PURE__*/React.createElement(\"form\", {\n      action: \"http://localhost:5000/user\",\n      method: \"POST\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      required: true,\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"enter an email address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      required: true,\n      type: \"password\",\n      name: \"rawPassword\",\n      placeholder: \"enter a password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      options: genres,\n      onChange: this.handleGenres,\n      components: animatedComponents,\n      isMulti: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"genres\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \"Choose three Genres:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"genres\",\n      id: \"genres\",\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, this.items), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"artists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, \"Choose three artists:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"artists\",\n      id: \"artists\",\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, this.artists), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, \"Sign Up\")));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/innovation/Desktop/vibecheck/frontend/src/pages/Home.js"],"names":["React","Redirect","Select","makeAnimated","genres","animatedComponents","Home","Component","constructor","handleGenres","genreChange","string","alert","length","state","data","recArtists","componentDidMount","axios","require","get","then","response","setState","JSON","stringify","catch","error","console","i","push","label","value","tracks","tempArr","artists","name","render","items","map","item","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\n\n\nconst genres = []\nconst animatedComponents = makeAnimated();\nclass Home extends React.Component { \n\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n    this.state = {\n      data: null,\n      genres: null,\n      recArtists: null,\n    };\n  }\n\n componentDidMount() {\n  const axios = require('axios');\n  axios.get(`http://localhost:5000/data`)\n      .then((response) => {\n          this.setState({\n              data: (JSON.stringify(response.data.data))\n          });\n      }).catch((error) => {\n          alert(\"There was an error connecting to the api\")\n          console.error(error);\n      }); \n  \n  axios.get(`http://localhost:5000/allGenres`)\n  .then((response) => {\n    \n      for(var i = 0; i < response.data.data.genres.length; i++)\n      {\n        genres.push({label: response.data.data.genres[i], value: response.data.data.genres[i]})\n      }\n      \n      this.setState({\n          genres: response.data.data.genres\n      });\n  }).catch((error) => {\n      alert(\"There was an error connecting to the api\")\n      console.error(error);\n  });\n\n  axios.get(`http://localhost:5000/recommendations`)\n  .then((response) => {\n    var length = (response.data.data.tracks.length)\n    \n    var tempArr = []\n    for(var i = 0; i < length; i++)\n    {\n      tempArr.push(response.data.data.tracks[i].artists[0].name)\n    }\n      this.setState({\n          recArtists: tempArr\n      });\n  }).catch((error) => {\n      alert(\"There was an error connecting to the api\")\n      console.error(error);\n  });\n }\n\n handleGenres = genreChange => {\n  var string = \"\"\n  \n  \n  alert(genreChange.length)\n  /*for(var i = 0; i < genreChange.length; i++)\n  {\n    string += (newCountry[i]['label'] + \", \")\n  }\n  alert(string)*/\n\n};\n\n  render()\n  {  \n    if(this.state.genres != null)\n    {\n      this.items = this.state.genres.map((item, key) =>\n        <option name={item} key={key}>{item}</option>\n      ); \n    }\n\n    if(this.state.recArtists != null)\n    {\n      this.artists = this.state.recArtists.map((item, key) =>\n        <option name={item} key={key}>{item}</option>\n      ); \n    }\n    \n    return (\n      <div>\n        {this.state.recArtists}\n        <h1>{this.state.data}</h1>\n        <form action = 'http://localhost:5000/user' method = 'POST'>\n            <br></br>\n            <input required type=\"email\" name=\"email\" placeholder=\"enter an email address\"></input>\n            <input required type=\"password\" name=\"rawPassword\" placeholder=\"enter a password\"></input>\n            \n            <br></br>\n            <div className=\"row\">\n          <div className=\"col-md-3\"></div>\n          <div className=\"col-md-6\">\n            <Select options={genres} onChange={this.handleGenres} components={animatedComponents}\n              isMulti />\n          </div>\n          <div className=\"col-md-4\"></div>\n        </div>\n            <label for=\"genres\">Choose three Genres:</label>\n            <br></br>\n              <select name=\"genres\" id=\"genres\" multiple>\n                {this.items}\n              </select>\n              <br></br>\n              <label for=\"artists\">Choose three artists:</label>\n              <br></br>\n              <select name=\"artists\" id=\"artists\" multiple>\n                {this.artists}\n              </select>\n              <br></br>\n\n          <button type=\"submit\">Sign Up</button>\n        </form>\n      </div>\n    )        \n  }\n}\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/innovation/Desktop/vibecheck/frontend/src/pages/Playlist.js\";\nimport React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nconst genres = [];\nvar recommended = [];\nconst animatedComponents = makeAnimated();\nconst Vibes = [{\n  label: \"Funky\",\n  value: \"Funky\"\n}, {\n  label: \"Happy\",\n  value: \"Happy\"\n}, {\n  label: \"Sad\",\n  value: \"Sad\"\n}, {\n  label: \"Chill\",\n  value: \"Chill\"\n}, {\n  label: \"Flirty\",\n  value: \"Flirty\"\n}, {\n  label: \"Study\",\n  value: \"Study\"\n}, {\n  label: \"Workout\",\n  value: \"Workout\"\n}, {\n  label: \"Nostalgic\",\n  value: \"Nostalgic\"\n}];\n\nclass Playlist extends React.Component {\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n\n    this.handleVibe = newVibe => {\n      //handles updating the state for vibe\n      this.setState({\n        vibe: newVibe['label']\n      });\n    };\n\n    this.handleArtists = chosenArtists => {\n      //handles updating the state for vibe\n      if (chosenArtists != null) {\n        var tempArray = [];\n\n        for (var i = 0; i < chosenArtists.length; i++) {\n          tempArray.push(chosenArtists[i]['label']);\n        }\n\n        this.setState({\n          chosenArtists: tempArray\n        });\n      } else {\n        this.setState({\n          chosenArtists: null\n        });\n      }\n    };\n\n    this.handleGenres = genreChange => {\n      var string = \"\";\n      var finalGenres = [];\n\n      if (genreChange != null) {\n        var tempArray = [];\n\n        for (var i = 0; i < genreChange.length; i++) {\n          tempArray.push(genreChange[i]['label']);\n        }\n\n        this.setState({\n          genresSelected: tempArray\n        });\n\n        if (this.state.change === true) {\n          this.setState({\n            change: false\n          });\n        } else {\n          this.setState({\n            change: true\n          });\n        }\n\n        if (genreChange.length >= 1) {\n          //ensures only three genres are sent over as seeds\n          var temp = this.state.arrLen + 1;\n          this.setState({\n            arrLen: temp\n          });\n          finalGenres.push(genreChange[genreChange.length - 1]['value']); //a custom axios post request to ensure data is sent over...\n          //in this case, data is sent in params attribute\n\n          const request = axios({\n            headers: {\n              'content-type': 'application/json'\n            },\n            method: 'post',\n            url: `http://localhost:5000/recommendations`,\n            params: {\n              finalGenres\n            }\n          }).then(response => {\n            var length = response.data.data.tracks.length;\n\n            for (var i = 0; i < length; i++) {\n              console.log(response.data.data.tracks[i].artists[0].name);\n              recommended.push({\n                label: response.data.data.tracks[i].artists[0].name,\n                value: response.data.data.tracks[i].artists[0].name\n              });\n            }\n\n            alert(recommended.length);\n          }).catch(error => {\n            alert(\"There was an error connecting to the api\");\n            console.error(error);\n          });\n        }\n      } else {\n        this.setState({\n          genresSelected: null\n        });\n      }\n    };\n\n    this.submit = function (e) {\n      alert(\"hello\");\n      e.preventDefault();\n    };\n\n    this.state = {\n      data: null,\n      genresSelected: null,\n      recArtists: null,\n      vibe: \"Funky\",\n      chosenArtists: null,\n      change: false,\n      arrLen: 0\n    };\n  }\n\n  componentDidMount() {\n    //creates a k,v pair list for genres that will be fed into react-select\n    axios.get(`http://localhost:5000/allGenres`).then(response => {\n      for (var i = 0; i < response.data.data.genres.length; i++) {\n        genres.push({\n          label: response.data.data.genres[i],\n          value: response.data.data.genres[i]\n        });\n      }\n\n      this.setState({\n        genres: response.data.data.genres\n      });\n    }).catch(error => {\n      alert(\"There was an error connecting to the api\");\n      console.error(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, \"this is used to validate states are updating properly\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, \"Vibe: \", this.state.vibe), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, \"Genres Selected [\", this.state.length, \"]: \", this.state.genresSelected), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, \"Artists: \", this.state.chosenArtists), /*#__PURE__*/React.createElement(\"form\", {\n      action: \"http://localhost:5000/newPlaylist\",\n      method: \"POST\",\n      onSubmit: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, \"Select Vibe\"), /*#__PURE__*/React.createElement(Select, {\n      options: Vibes,\n      onChange: this.handleVibe,\n      components: animatedComponents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }, \"Select Genres\"), /*#__PURE__*/React.createElement(Select, {\n      options: genres,\n      onChange: this.handleGenres,\n      components: animatedComponents,\n      isMulti: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 19\n      }\n    }, \"Select Artists\"), this.state.change === true && /*#__PURE__*/React.createElement(Select, {\n      options: recommended,\n      onChange: this.handleArtists,\n      components: animatedComponents,\n      isMulti: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 50\n      }\n    }), this.state.change === false && /*#__PURE__*/React.createElement(Select, {\n      options: recommended,\n      onChange: this.handleArtists,\n      components: animatedComponents,\n      isMulti: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 51\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      class: \"button\",\n      value: \"Sign Up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\n\nexport default Playlist;","map":{"version":3,"sources":["/Users/innovation/Desktop/vibecheck/frontend/src/pages/Playlist.js"],"names":["React","Redirect","Select","makeAnimated","axios","genres","recommended","animatedComponents","Vibes","label","value","Playlist","Component","constructor","handleVibe","newVibe","setState","vibe","handleArtists","chosenArtists","tempArray","i","length","push","handleGenres","genreChange","string","finalGenres","genresSelected","state","change","temp","arrLen","request","headers","method","url","params","then","response","data","tracks","console","log","artists","name","alert","catch","error","submit","e","preventDefault","recArtists","componentDidMount","get","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\n\nconst genres = []\nvar recommended = []\nconst animatedComponents = makeAnimated();\n\nconst Vibes = [\n{ label: \"Funky\", value: \"Funky\" },\n{ label: \"Happy\", value: \"Happy\" },\n{ label: \"Sad\", value: \"Sad\" },\n{ label: \"Chill\", value: \"Chill\" },\n{ label: \"Flirty\", value: \"Flirty\" },\n{ label: \"Study\", value: \"Study\" },\n{ label: \"Workout\", value: \"Workout\" },\n{ label: \"Nostalgic\", value: \"Nostalgic\" }\n];\n\nclass Playlist extends React.Component {\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n    this.state = {\n        data: null,\n        genresSelected: null,\n        recArtists: null,\n        vibe: \"Funky\",\n        chosenArtists: null,\n        change: false,\n        arrLen: 0,\n      };\n  }\n\n  componentDidMount() {\n\n    //creates a k,v pair list for genres that will be fed into react-select\n    axios.get(`http://localhost:5000/allGenres`)\n    .then((response) => {\n      for (var i = 0; i < response.data.data.genres.length; i++) {\n      genres.push({ label: response.data.data.genres[i], value: response.data.data.genres[i] })\n      }\n      \n      this.setState({\n        genres: response.data.data.genres\n      });\n\n    }).catch((error) => {\n      alert(\"There was an error connecting to the api\")\n      console.error(error);\n    });\n\n  }\n\n  handleVibe = newVibe => {\n    //handles updating the state for vibe\n    this.setState({vibe: newVibe['label']})\n  };\n\n  handleArtists = chosenArtists => {\n    //handles updating the state for vibe\n    if(chosenArtists != null)\n    {\n      var tempArray = []\n\n      for(var i = 0; i < chosenArtists.length; i++)\n      {\n        tempArray.push(chosenArtists[i]['label'])\n      }\n      this.setState({chosenArtists: tempArray})\n    }\n    else{this.setState({chosenArtists: null})}\n  };\n\n  //creates a k,v pair list for artists from a certaini genre that will be fed into react-select\n  handleGenres = genreChange => {\n    var string = \"\"\n    var finalGenres = []\n\n\n    if (genreChange != null) {\n      \n      var tempArray = []\n\n      for(var i = 0; i < genreChange.length; i++)\n      {\n        tempArray.push(genreChange[i]['label'])\n      }\n      this.setState({genresSelected: tempArray})\n\n      if(this.state.change === true){this.setState({change: false})}\n      else{this.setState({change: true})}\n\n       \n      if (genreChange.length >= 1) {\n          //ensures only three genres are sent over as seeds\n          var temp = this.state.arrLen + 1\n          this.setState({arrLen: temp})\n          finalGenres.push(genreChange[genreChange.length - 1]['value'])\n          \n          //a custom axios post request to ensure data is sent over...\n          //in this case, data is sent in params attribute\n          const request = axios({\n            headers: {\n            'content-type': 'application/json'\n            },\n            method: 'post',\n            url: `http://localhost:5000/recommendations`,\n            params: {\n              finalGenres\n            }\n          })\n          .then((response) => {\n            var length = (response.data.data.tracks.length)\n            for (var i = 0; i < length; i++) {\n              console.log(response.data.data.tracks[i].artists[0].name)\n              recommended.push({label: response.data.data.tracks[i].artists[0].name, value: response.data.data.tracks[i].artists[0].name})\n            }\n            alert(recommended.length)\n          }).catch((error) => {\n            alert(\"There was an error connecting to the api\")\n            console.error(error);\n          });\n        \n      }\n    }\n    else{this.setState({genresSelected: null})}\n  };\n\n  submit = function (e) {\n    \n    alert(\"hello\")\n    e.preventDefault();\n  }\n\n  render() \n    {\n      return (\n        <div>\n          <h1>this is used to validate states are updating properly</h1>\n          <h2>Vibe: {this.state.vibe}</h2>\n          <h2>Genres Selected [{this.state.length}]: {this.state.genresSelected}</h2>\n\n          <h2>Artists: {this.state.chosenArtists}</h2>\n          \n          <form action='http://localhost:5000/newPlaylist' method='POST' onSubmit={this.submit}>\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <h1>Select Vibe</h1>\n                  <Select options={Vibes} onChange={this.handleVibe} components={animatedComponents}\n                  />\n                  <br></br>\n                  <h1>Select Genres</h1>\n                  <Select options={genres} onChange={this.handleGenres} components={animatedComponents} isMulti />\n                  <br></br>\n                  <h1>Select Artists</h1>\n                  {this.state.change === true && <Select options={recommended} onChange={this.handleArtists} components={animatedComponents} isMulti />}\n                  {this.state.change === false && <Select options={recommended} onChange={this.handleArtists} components={animatedComponents} isMulti />}\n                  <br></br>\n                \n                  <input type=\"submit\" class=\"button\" value=\"Sign Up\" />\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      )\n    }\n}\nexport default Playlist;"]},"metadata":{},"sourceType":"module"}
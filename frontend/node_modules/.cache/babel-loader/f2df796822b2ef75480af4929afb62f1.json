{"ast":null,"code":"var _jsxFileName = \"/Users/innovation/Desktop/vibecheck/frontend/src/pages/minorComponents/NewPlay.js\";\nimport React from 'react';\nimport '../../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport '../loginsignup.css';\nconst genres = [];\nconst animatedComponents = makeAnimated();\n\nclass NewPlay extends React.Component {\n  //   <Select options={genres} onChange={this.handleGenres} components={animatedComponents} isMulti />\n  //   <div className=\"col-md-4\"></div>\n  // </div>\n  //   <label for=\"genres\">Choose three Genres:</label>\n  //    <br></br>\n  //      <select name=\"genres\" id=\"genres\" multiple>\n  //        {this.items}\n  //      </select>\n  //      <br></br>\n  //      <label for=\"artists\">Choose three artists:</label>\n  //      <br></br>\n  //      <select name=\"artists\" id=\"artists\" multiple>\n  //        {this.artists}\n  //      </select>\n  //      <br></br>\n  // </div>\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n\n    this.handleGenres = genreChange => {\n      var string = \"\";\n      var finalGenres = [];\n\n      if (genreChange != null) {\n        if (genreChange.length >= 3) {\n          alert(genreChange.length);\n\n          for (var i = genreChange.length - 3; i < genreChange.length; i++) {\n            finalGenres.push(genreChange[i]['value']);\n          }\n\n          alert(finalGenres);\n        }\n      }\n    };\n\n    this.state = {\n      data: null,\n      genres: null,\n      recArtists: null\n    };\n  }\n\n  componentDidMount() {\n    const axios = require('axios');\n\n    axios.get(`http://localhost:5000/data`).then(response => {\n      this.setState({\n        data: JSON.stringify(response.data.data)\n      });\n    }).catch(error => {\n      alert(\"There was an error connecting to the api\");\n      console.error(error);\n    });\n    axios.get(`http://localhost:5000/allGenres`).then(response => {\n      for (var i = 0; i < response.data.data.genres.length; i++) {\n        genres.push({\n          label: response.data.data.genres[i],\n          value: response.data.data.genres[i]\n        });\n      }\n\n      this.setState({\n        genres: response.data.data.genres\n      });\n    }).catch(error => {\n      alert(\"There was an error connecting to the api\");\n      console.error(error);\n    });\n    axios.get(`http://localhost:5000/recommendations`).then(response => {\n      var length = response.data.data.tracks.length;\n      var tempArr = [];\n\n      for (var i = 0; i < length; i++) {\n        tempArr.push(response.data.data.tracks[i].artists[0].name);\n      }\n\n      this.setState({\n        recArtists: tempArr\n      });\n    }).catch(error => {\n      alert(\"There was an error connecting to the api\");\n      console.error(error);\n    });\n  }\n\n  render() {\n    if (this.state.genres != null) {\n      this.items = this.state.genres.map((item, key) => /*#__PURE__*/React.createElement(\"option\", {\n        name: item,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, item));\n    }\n\n    if (this.state.recArtists != null) {\n      this.artists = this.state.recArtists.map((item, key) => /*#__PURE__*/React.createElement(\"option\", {\n        name: item,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }, item));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, \"hello\"), /*#__PURE__*/React.createElement(\"form\", {\n      action: \"http://localhost:5000/user\",\n      method: \"POST\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"genres\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, \"Choose three Genres:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"genres\",\n      id: \"genres\",\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, this.items), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"artists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, \"Choose three artists:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"artists\",\n      id: \"artists\",\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, this.artists), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default NewPlay;","map":{"version":3,"sources":["/Users/innovation/Desktop/vibecheck/frontend/src/pages/minorComponents/NewPlay.js"],"names":["React","Redirect","Select","makeAnimated","genres","animatedComponents","NewPlay","Component","constructor","handleGenres","genreChange","string","finalGenres","length","alert","i","push","state","data","recArtists","componentDidMount","axios","require","get","then","response","setState","JSON","stringify","catch","error","console","label","value","tracks","tempArr","artists","name","render","items","map","item","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../vibecheck.css';\nimport { Redirect } from \"react-router-dom\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport '../loginsignup.css';\n\nconst genres = []\nconst animatedComponents = makeAnimated();\nclass NewPlay extends React.Component {\n\n\n//   <Select options={genres} onChange={this.handleGenres} components={animatedComponents} isMulti />\n\n//   <div className=\"col-md-4\"></div>\n// </div>\n//   <label for=\"genres\">Choose three Genres:</label>\n//    <br></br>\n//      <select name=\"genres\" id=\"genres\" multiple>\n//        {this.items}\n//      </select>\n//      <br></br>\n//      <label for=\"artists\">Choose three artists:</label>\n//      <br></br>\n//      <select name=\"artists\" id=\"artists\" multiple>\n//        {this.artists}\n//      </select>\n//      <br></br>\n// </div>\n\n  //the states of emotion and source will be set to null initially until the user had filled out the form.\n  constructor() {\n    super();\n    this.state = {\n      data: null,\n      genres: null,\n      recArtists: null,\n    };\n  } \n\n  componentDidMount() {\n    const axios = require('axios');\n    axios.get(`http://localhost:5000/data`)\n      .then((response) => {\n        this.setState({\n          data: (JSON.stringify(response.data.data))\n        });\n      }).catch((error) => {\n        alert(\"There was an error connecting to the api\")\n        console.error(error);\n      });\n\n    axios.get(`http://localhost:5000/allGenres`)\n      .then((response) => {\n\n        for (var i = 0; i < response.data.data.genres.length; i++) {\n          genres.push({ label: response.data.data.genres[i], value: response.data.data.genres[i] })\n        }\n\n        this.setState({\n          genres: response.data.data.genres\n        });\n      }).catch((error) => {\n        alert(\"There was an error connecting to the api\")\n        console.error(error);\n      });\n\n    axios.get(`http://localhost:5000/recommendations`)\n      .then((response) => {\n        var length = (response.data.data.tracks.length)\n\n        var tempArr = []\n        for (var i = 0; i < length; i++) {\n          tempArr.push(response.data.data.tracks[i].artists[0].name)\n        }\n        this.setState({\n          recArtists: tempArr\n        });\n      }).catch((error) => {\n        alert(\"There was an error connecting to the api\")\n        console.error(error);\n      });\n  }\n\n  handleGenres = genreChange => {\n    var string = \"\"\n    var finalGenres = []\n\n    if (genreChange != null) {\n      if (genreChange.length >= 3) {\n        alert(genreChange.length)\n        for (var i = genreChange.length - 3; i < genreChange.length; i++) {\n          finalGenres.push(genreChange[i]['value'])\n        }\n        alert(finalGenres)\n      }\n    }\n  };\n\n  render() {\n    if (this.state.genres != null) {\n      this.items = this.state.genres.map((item, key) =>\n        <option name={item} key={key}>{item}</option>\n      );\n    }\n\n    if (this.state.recArtists != null) {\n      this.artists = this.state.recArtists.map((item, key) =>\n        <option name={item} key={key}>{item}</option>\n      );\n    }\n\n    return (\n      <div>\n      <h1>hello</h1>\n      <form action='http://localhost:5000/user' method='POST'>\n         <div className=\"col-md-4\"></div>\n        \n          <label for=\"genres\">Choose three Genres:</label>\n          <br></br>\n          <select name=\"genres\" id=\"genres\" multiple>\n            {this.items}\n          </select>\n          <br></br>\n          <label for=\"artists\">Choose three artists:</label>\n          <br></br>\n          <select name=\"artists\" id=\"artists\" multiple>\n            {this.artists}\n          </select>\n          <br></br>\n       \n      </form>\n      </div>\n    )\n  }\n}\nexport default NewPlay;\n"]},"metadata":{},"sourceType":"module"}